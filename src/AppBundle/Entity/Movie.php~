<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Gedmo\Mapping\Annotation as Gedmo;
use Symfony\Component\Serializer\Annotation\Groups;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Movie
 *
 * @ORM\Table(name="movie", options={"comment":"enregistre les programmes ou movies"}, indexes={@ORM\Index(columns={"slug","synopsis"},flags={"fulltext"})})
 * @ORM\Entity(repositoryClass="AppBundle\Repository\MovieRepository")
 */
class Movie
{
    /**
    * @var int
    *
    * @Groups({"group1","group2"})
    * @ORM\Column(name="id", type="integer")
    * @ORM\Id
    * @ORM\GeneratedValue(strategy="AUTO")
    */
    private $id;

    /**
    * @var AppBundle\Entity\Category
    *
    * @Groups({"group1","group2"})
    * @ORM\ManyToOne(targetEntity="AppBundle\Entity\Category", inversedBy="movies")
    * @ORM\JoinColumn(nullable=true, onDelete="SET NULL")
    */
    private $category;

    /**
    * @var string
    *
    * @Groups({"group1","group2"})
    * @ORM\Column(name="name", type="string", length=50, unique=true)
    */
    private $name;

    /**
    * @var string
    *
    * @Groups({"group1","group2"})
    * @ORM\Column(name="original_name", type="string", length=50, nullable=true)
    */
    private $originalName;

    /**
    * @var string
    *
    * @Groups({"group1","group2"})
    * @ORM\Column(name="synopsis", type="text", nullable=true)
    */
    private $synopsis;

    /**
    * @var boolean
    *
    * @Groups({"group1","group2"})
    * @ORM\Column(name="in_theather", type="boolean", options={"comment":"valide si un programme est à l'affiche ou non"}, nullable=true)
    */
    private $inTheather = 0;

    /**
    * @var \Datetime
    *
    * @Groups({"group1","group2"})
    * @ORM\Column(name="year_start", type="datetime", options={"comment":"debut de l'année de production du film"}, nullable=true)
    */
    private $yearStart;

    /**
    * @var \Datetime
    *
    * @Groups({"group1","group2"})
    * @ORM\Column(name="year_end", type="datetime", options={"comment":"fin de l'année de production du film"}, nullable=true)
    */
    private $yearEnd;

    /**
    * @var string
    *
    * @Groups({"group1","group2"})
    * @ORM\Column(name="format", type="string", options={"comment":"enregistre le format du film"}, nullable=true)
    */
    private $format;

    /**
    * @var string
    *
    * @Groups({"group1","group2"})
    * @ORM\Column(name="mention", type="string", options={"comment":"determine si le movie est en HD, SD ou autre"}, columnDefinition="ENUM('HD','SD','4k','2k')", nullable=true)
    */
    private $mention = "HD";

    /**
    * @var string
    *
    * @Groups({"group1","group2"})
    * @ORM\Column(name="original_language", type="string", options={"comment":"la langue original du movie"},nullable=true)
    */
    private $originalLanguage;

    /**
    * @var boolean
    *
    * @Groups({"group1","group2"})
    * @ORM\Column(name="has_exclusivity", type="boolean", options={"comment":"marque un movie comme etant à la une"},nullable=true)
    */
    private $hasExclusivity = 0;


   /**
    * @var string
    *
    * @Groups({"group1","group2"})
    * @ORM\Column(name="cover_img", type="string", length=255, nullable=true, options={"comment":"stock l'image de couverture du programme"})
    * @assert\Image(mimeTypes={"image/jpg","image/jpeg","image/png"},minWidth=1920,maxWidth=1920, minHeight=1080,maxHeight=1080)
    */
    private $coverImg;

    /**
    * @var string
    *
    * @Groups({"group1","group2"})
    * @ORM\Column(name="landscape_img", type="string", length=255, nullable=true, options={"comment":"stock la vignette en paysage du programme"})
    * @assert\Image(mimeTypes={"image/jpg","image/jpeg","image/png"},minWidth=640,maxWidth=640, minHeight=360,maxHeight=360)
    */
    private $landscapeImg;

    /**
    * @var string
    *
    * @Groups({"group1","group2"})
    * @ORM\Column(name="portrait_img", type="string", length=255, nullable=true,options={"comment":"stock la vignette en portrait du programme"})
    * @assert\Image(mimeTypes={"image/jpg","image/jpeg","image/png"},minWidth=270,maxWidth=270, minHeight=360,maxHeight=360)
    */
    private $portraitImg;

    /**
    * @var string
    *
    * @Groups({"group1","group2"})
    * @ORM\Column(name="trailer", type="string", length=255, nullable=true, options={"comment":"le lien du trailer du programme"})
    * @assert\Url
    */
    private $trailer;

    /**
    * @var string
    *
    * @Groups({"group1","group2"})
    * @ORM\Column(name="episode_1", type="string", length=255, nullable=true, options={"comment":"le lien de l'episode 1 du programme"})
    * @assert\Url
    */
    private $episode1;

    /**
    * @var string
    *
    * @Groups({"group1","group2"})
    * @ORM\Column(name="episode_2", type="string", length=255, nullable=true, options={"comment":"le lien de l'episode 2 du programme"})
    * @assert\Url
    */
    private $episode2;

    /**
    * @var string
    *
    * @Groups({"group1","group2"})
    * @ORM\Column(name="episode_3", type="string", length=255, nullable=true, options={"comment":"le lien de l'episode 3 du programme"})
    * @assert\Url
    */
    private $episode3;


    /**
    * @var string
    *
    * @Groups({"group1","group2"})
    * @Gedmo\Slug(fields={"name"})
    * @ORM\Column(name="slug", type="string", length=30, unique=true)
    */
    private $slug;

    /**
    * @var \DateTime
    *
    * @Groups({"group1","group2"})
    * @ORM\Column(name="create_at", type="datetime", nullable=true)
    */
    private $createAt;

    /**
    * @Groups({"group2"})
    * @ORM\OneToMany(targetEntity="AppBundle\Entity\MovieGenre", mappedBy="movie")
    */
    private $genres;
    /**
    * @Groups({"group2"})
    * @ORM\OneToMany(targetEntity="AppBundle\Entity\MovieCountry", mappedBy="movie")
    */
    private $countries;
    /**
    * @Groups({"group2"})
    * @ORM\OneToMany(targetEntity="AppBundle\Entity\MovieLanguage", mappedBy="movie")
    */
    private $languages;
    /**
    * @Groups({"group2"})
    * @ORM\OneToMany(targetEntity="AppBundle\Entity\MovieActor", mappedBy="movie")
    */
    private $actors;
    /**
    * @Groups({"group2"})
    * @ORM\OneToMany(targetEntity="AppBundle\Entity\MovieSeason", mappedBy="movie")
    */
    private $seasons;
    /**
    * @Groups({"group2"})
    * @ORM\OneToMany(targetEntity="AppBundle\Entity\MovieReward", mappedBy="movie")
    */
    private $rewards;
    /**
    * @Groups({"group2"})
    * @ORM\OneToMany(targetEntity="AppBundle\Entity\MovieProducer", mappedBy="movie")
    */
    private $producers;
    /**
    * @Groups({"group2"})
    * @ORM\OneToMany(targetEntity="AppBundle\Entity\MovieDirector", mappedBy="movie")
    */
    private $directors;
    /**
    * @Groups({"group2"})
    * @ORM\OneToMany(targetEntity="AppBundle\Entity\MovieScene", mappedBy="movie")
    */
    private $scenes;
}
