<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Gedmo\Mapping\Annotation as Gedmo;

/**
 * PasswordReset
 *
 * @ORM\Table(name="password_reset")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\PasswordResetRepository")
 */
class PasswordReset
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
    * @var AppBundle\Entity\User
    *
    * @ORM\ManyToOne(targetEntity="AppBundle\Entity\User")
    * @ORM\JoinColumn(nullable=true, onDelete="CASCADE")
    */
    private $user;

    /**
     * @var string
     *
     * @ORM\Column(name="old_password", type="string", length=100)
     */
    private $oldPassword;

    /**
    * @var string
    *
    * @ORM\Column(name="token", type="string", options={"comment":"un code arbitraire unique généré pour la tracabilité"}, nullable=false, length=64)
    */
    private $token;

    /**
    * @var boolean
    *
    * @ORM\Column(name="email_verified", type="boolean", options={"comment":"permet de savoir si l'adresse mail a été vérifiée"}, nullable=true)
    */
    private $emailVerified = 0;

    /**
    * @var \DateTime
    *
    * @Gedmo\Timestampable(on="create")
    * @ORM\Column(name="create_at", type="datetime")
    */
    private $createAt;


    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set oldPassword
     *
     * @param string $oldPassword
     *
     * @return PasswordReset
     */
    public function setOldPassword($oldPassword)
    {
        $this->oldPassword = $oldPassword;

        return $this;
    }

    /**
     * Get oldPassword
     *
     * @return string
     */
    public function getOldPassword()
    {
        return $this->oldPassword;
    }

    /**
     * Set createAt
     *
     * @param \DateTime $createAt
     *
     * @return PasswordReset
     */
    public function setCreateAt($createAt)
    {
        $this->createAt = $createAt;

        return $this;
    }

    /**
     * Get createAt
     *
     * @return \DateTime
     */
    public function getCreateAt()
    {
        return $this->createAt;
    }

    /**
     * Set user
     *
     * @param \AppBundle\Entity\User $user
     *
     * @return PasswordReset
     */
    public function setUser(\AppBundle\Entity\User $user = null)
    {
        $this->user = $user;

        return $this;
    }

    /**
     * Get user
     *
     * @return \AppBundle\Entity\User
     */
    public function getUser()
    {
        return $this->user;
    }

    /**
     * Set token
     *
     * @param string $token
     *
     * @return PasswordReset
     */
    public function setToken($token)
    {
        $this->token = $token;

        return $this;
    }

    /**
     * Get token
     *
     * @return string
     */
    public function getToken()
    {
        return $this->token;
    }
}
